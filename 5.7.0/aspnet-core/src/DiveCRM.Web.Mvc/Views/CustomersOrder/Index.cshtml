@using DiveCRM.Web.Startup;
@using Webdiyer.AspNetCore;
@using DiveCRM.Customers;
@model PagedList<CustomersOrder>

@{
    ViewBag.Title = L("Orders");
    ViewBag.CurrentPageName = PageNames.Orders;
}

<section class="content-header">
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-6">
                <h1>@L("Customers")</h1>
            </div>
            <div class="col-sm-6">
                <a href="/CustomersOrder/Create" class="btn bg-blue float-sm-right">
                    <i class="fa fa-plus-square"></i>
                    @L("Create")
                </a>
            </div>
        </div>
    </div>
</section>
<div class="card-header">
    <div class="row">
        <div class="col-md-6">
            <!--Use for bulk actions-->
        </div>
        <div class="col-md-6">
            @using (Html.BeginForm("Index", "CustomersOrder", FormMethod.Get))
            {
            <div class="abp-advanced-search">
                <form id="UsersSearchForm" class="form-horizontal">
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <button type="submit" class="btn bg-blue btn-search">
                                <span class="fas fa-search" aria-hidden="true"></span>
                            </button>
                        </div>
                        <input type="date" name="searchTime" value="@ViewData["OrderTime"]" class="form-control txt-search" />
                    </div>
                </form>
            </div>
            }
        </div>
    </div>
</div>
<div class="card-body">
    <div class="table-responsive">
        <table id="UsersTable" class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>
                    </th>
                    <th>
                        预约时间
                    </th>
                    <th>
                        姓名
                    </th>
                    <th>
                        联系方式
                    </th>
                    <th>
                        泳池
                    </th>
                    <th>
                        课程
                    </th>
                    <th>
                        教练
                    </th>
                    <th>
                        状态
                    </th>
                    <th>
                        责任客服
                    </th>
                    <th>操作</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                <tr>
                    <td>

                        @Html.ActionLink("签到", "UpdateState", new { id = item.Id, state = 72 })
                        &nbsp;&nbsp;
                        @Html.ActionLink("取消", "UpdateState", new { id = item.Id, state = 73})
                    </td>

                    <td style="display:none;">
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CustomerName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Customer.Mobile)
                    </td>
                    <td>
                        @{
                            var pool = (List<DiveCRM.Dicts.Dict>)ViewData["PoolType"];
                            string poolValue = string.Empty;
                            pool.ForEach(x =>
                            {
                                if (x.Id == item.PoolType)
                                    poolValue = x.DValue;
                            });
                        }
                        @Html.DisplayFor(modelItem => poolValue)
                    </td>
                    <td>
                        @{
                            var course = (List<DiveCRM.Dicts.Dict>)ViewData["CourseType"];
                            string courseValue = string.Empty;
                            course.ForEach(x =>
                            {
                                if (x.Id == item.CourseType)
                                    courseValue = x.DValue;
                            });
                        }
                        @Html.DisplayFor(modelItem => courseValue)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Coach.Name)
                    </td>
                    <td>
                        @{
                            var q = (List<DiveCRM.Dicts.Dict>)ViewData["State"];
                            string stateValue = string.Empty;
                            q.ForEach(x =>
                            {
                                if (x.Id == item.State)
                                    stateValue = x.DValue;
                            });
                        }
                        @Html.DisplayFor(modelItem => stateValue)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ResponsiblePerson.UserName)
                    </td>
                    <td class="btn btn-sm bg-secondary edit-user">
                        <i class="fas fa-pencil-alt"></i>
                        @Html.ActionLink("编辑", "Edit", new { id = item.Id })
                    </td>
                </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@Html.Pager(Model, new PagerOptions
{
    PageIndexParameterName = "pageIndex",
    TagName = "ul",
    CssClass = "pagination",
    CurrentPagerItemTemplate = "<li class=\"page-item active\"><a  class=\"page-link\" href=\"javascript:void(0);\">{0}</a></li>",
    DisabledPagerItemTemplate = "<li class=\"page-item disabled\"><a class=\"page-link\">{0}</a></li>",
    PagerItemTemplate = "<li class=\"page-item\">{0}</li>",
    PagerItemCssClass = "page-link",
    Id = "bootstrappager"
})
